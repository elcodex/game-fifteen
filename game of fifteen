написать на javascript (ECMAscript например не старше 5) код, который будет мониторить 
результаты любых ajax запросов расположенных на той же странице и в случае ошибок 
отправлять данные на сервер логов/статистики

<div id="board">
  <div class="tile" id="0"></div>
  <div class="tile" id="1"></div>
  <div class="tile" id="2"></div>
  <div class="tile" id="3"></div>
  <div class="tile" id="4"></div>
  <div class="tile" id="5"></div>
  <div class="tile" id="6"></div>
  <div class="tile" id="7"></div>
  <div class="tile" id="8"></div>
  <div class="tile" id="9"></div>
  <div class="tile" id="10"></div>
  <div class="tile" id="11"></div>
  <div class="tile" id="12"></div>
  <div class="tile" id="13"></div>
  <div class="tile" id="14"></div>
  <div class="missing-tile" id="15"></div>
</div>


* {
  box-sizing: border-box;
}
#board {
  width: 421px;
  height: 421px;
  display:grid;
  grid-template-rows: repeat(4, 100px);
  grid-template-columns: repeat(4, 100px);
  grid-gap: 3px;
  border: 3px solid green; 
  padding: 3px;
  margin: auto;
}

.tile {
  border: 1px solid green;
  text-align: center;
  font-size: 70px;
  color: green;
}


const COUNT_INVERSIONS = 10;
const emptyNumber = 16;
const shuffle = _ => {
    let numbers = [...new Array(15)].map((_, i) => i+1);
    console.log(numbers);
    for (let i = 0; i < Math.floor(Math.random() * COUNT_INVERSIONS) * 2; i++) {
        const i1 = Math.floor(Math.random()*15);
        let i2 = Math.floor(Math.random()*15);
        while (i2 === i1) i2 = Math.floor(Math.random()*15);
        const temp = numbers[i1];
        numbers[i1] = numbers[i2];
        numbers[i2] = temp;
    }
    numbers.push(emptyNumber);
    return numbers; 
}
const game = values => {
  let numbers = [...values];
  numbers.push(emptyNumber);
  return {
    turn: number => {
        const i1 = numbers.indexOf(number);
        const i2 = numbers.indexOf(emptyNumber); 
        const temp = numbers[i1];
        numbers[i1] = numbers[i2];
        numbers[i2] = temp;
        return numbers; 
    },
    isDone: _ => {
        return numbers.every((number, i) => number === i+1); 
    }
  }
}

// interface
const initializeBoard = values => {
    [...document.getElementsByClassName('tile')]
        .forEach((tile,i) => tile.innerHTML = values[i]);
}
const addMoves = _ => {
  [...document.getElementsByClassName('tile')]
        .forEach(tile => {
    ['move-bottom', 'move-left', 'move-top', 'move-right'].forEach(moveClass => {
        if (tile.classList.contains(moveClass)) 
            title.classList.remove(moveClass);
    });
  });
  let missingTile = document.querySelector(".missing-tile");
  const emptyNumberIndex = missingTile.id;
  let i = Math.floor(emptyNumberIndex / 4);
  let j = emptyNumberIndex % 4;
  [{di:-1, dj:0, move: 'bottom'}, {di:0, dj:1, move: 'left'}, {di:1, dj:0, move: 'top'}, {di:0, dj:-1, move: 'right'}].forEach(({di,dj,move}) => {
      if (i+di >= 0 && i+di < 4 && j+dj >=0 && j+dj < 4) {
          const index = (i+di) * 4 + (j+dj);
          let tile = document.querySelector(`[id="${index}"]`);
          tile.classList.add('move-' + move);
      }  
  });
}
const addBoardListener = _ => {
document.getElementById('board').addEventListener('click', e => {
    //  console.log(e);
    });
}

let boardValues = shuffle();
let game15 = game(boardValues);
initializeBoard(boardValues);
addBoardListener();

if (!game15.isDone()) {   //while
    addMoves();
}
